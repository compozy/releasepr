name: "Setup Bun Environment"
description: "Sets up Bun with caching and dependency installation for Compozy frontend"
author: "Compozy Team"

inputs:
  bun-version:
    description: "Bun version to install (fallback if .bun-version missing)"
    required: false
    default: "1.2.22"
  cache-key-suffix:
    description: "Additional suffix for cache key"
    required: false
    default: ""
  install-dependencies:
    description: "Install dependencies with bun install"
    required: false
    default: "true"

outputs:
  bun-version:
    description: "The Bun version that was installed"
    value: ${{ steps.setup-bun.outputs.bun-version }}
  cache-hit:
    description: "Whether the Bun dependencies cache was hit"
    value: ${{ steps.bun-cache.outputs.cache-hit }}

runs:
  using: "composite"
  steps:
    - name: Set up Bun
      id: setup-bun
      uses: oven-sh/setup-bun@v2
      with:
        # Prefer pinned version from project file for consistency across dev/CI
        bun-version-file: .bun-version
        bun-version: ${{ inputs.bun-version }}

    - name: Cache Bun dependencies
      id: bun-cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.bun/install/cache
          node_modules
        # Use the actual resolved Bun version and the text lockfile to bust cache correctly
        key: ${{ runner.os }}-bun-${{ steps.setup-bun.outputs.bun-version }}-${{ hashFiles('**/bun.lock',
          '**/package.json') }}${{ inputs.cache-key-suffix }}
        restore-keys: |
          ${{ runner.os }}-bun-${{ steps.setup-bun.outputs.bun-version }}-
          ${{ runner.os }}-bun-

    - name: Install dependencies
      if: inputs.install-dependencies == 'true'
      shell: bash
      run: |
        echo "Installing dependencies with Bun..."
        # 'bun ci' installs using lockfile without modifying it
        bun ci

    - name: Report setup status
      shell: bash
      run: |-
        echo "Bun setup completed successfully!"
        echo "Bun version: $(bun --version)"
        echo "Cache hit: ${{ steps.bun-cache.outputs.cache-hit }}"
        echo "Dependencies installed: ${{ inputs.install-dependencies }}"
